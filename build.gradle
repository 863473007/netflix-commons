// Establish version and status
ext.releaseVersion = '0.1.0'
ext.githubProjectName = 'commons'

buildscript {
    repositories { mavenCentral() }
}

allprojects {
    repositories { mavenCentral() }
}

//apply from: file('gradle/release.gradle') // Not fully tested
apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
//apply from: file('gradle/license.gradle') // Waiting for re-release

subprojects {
    // Closure to configure all the POM with extra info, common to all projects
    pom {
      project {
        url "https://github.com/Netflix-Skunkworks/${githubProjectName}"
        scm {
            connection "scm:git:git@github.com:Netflix-Skunkworks/${githubProjectName}.git"
            url "scm:git:git@github.com:Netflix-Skunkworks/${githubProjectName}.git"
            developerConnection "scm:git:git@github.com:Netflix-Skunkworks/${githubProjectName}.git"
        }
        issueManagement {
            system 'github'
            url "https://github.com/Netflix-Skunkworks/${githubProjectName}/issues"
        }
      }
   }
    group = "com.netflix.${githubProjectName}" // TEMPLATE: Set to organization of project
}


project(':commons-util') {
    dependencies {
        compile 'org.slf4j:slf4j-api:1.6.4'
        testCompile 'junit:junit:4.10'
        testCompile 'log4j:log4j:1.2.16'
    }
    // if you need to include resource files in the jar
    /*
    jar {
        from('src/main/java') {
            include 'sampleapp.properties'
        }
    }
    */
}

project(':commons-ipc') {
    dependencies {
        compile (project(":commons-util"))
        compile 'org.slf4j:slf4j-api:1.6.4'
        compile 'com.thoughtworks.xstream:xstream-distribution:1.3'
        compile 'org.codehaus.jettison:jettison:1.1'
        testCompile 'junit:junit:4.10'
        testCompile 'log4j:log4j:1.2.16'
    }
    /*
    jar {
        from('src/main/java') {
            include 'META-INF/conf/springbeans.xml'
	    include 'META-INF/conf/config.properties'
        }
    }
    */
}

